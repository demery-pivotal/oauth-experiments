# SCIM is a standard for representing (among other things) user identities and
# permissions.
scim:
  groups:
    # Groups act as permissions. To give a user a permission, add the user to
    # the group that defines the permission. In the Authorization Code flow (and
    # perhaps other flows), UAA presents a page that displays the description of
    # each requested permission as a checkbox, which allows the user to select
    # which permissions to grant.
    geode.cluster.read: 'Read the cluster configuration'
    geode.cluster.write: 'Change the cluster configuration'
    geode.data.read: 'Read region data'
    geode.data.write: 'Write region data'
  users:
    # The format is: username|password|comma-separated-group-names
    # The list of groups is essentially the user's list of permissions. When UAA
    # requests permissions from a user, it presents only the permissions listed
    # here.
    - datauser|datauser|openid,geode.data.read,geode.data.write,geode.data.read
    - clusteruser|clusteruser|openid,geode.cluster.read,geode.cluster.write
    - geodeuser|geodeuser|openid,geode.cluster.read,geode.cluster.write,geode.data.read,geode.data.write

oauth:
  clients:
    pulse:
      id: pulse
      name: Pulse
      secret: pulsesecret
      # The URL that UAA will redirect the user's browser to after the user
      # gives permissions.
      redirect-uri: http://localhost:7070/authcode
      # What kinds of flows this client can use to get tokens.
      authorized-grant-types: password,implicit,authorization_code,refresh_token
      # What kinds of permissions this client can request on behalf of users.
      # When a client requests permissions on behalf of a user, UAA presents
      # only the permissions listed here.
      scope: openid,geode.cluster.read,geode.cluster.write,geode.data.read,geode.data.write
